{"version":3,"sources":["../../../lib/commonComponents/HeaderTabs.js"],"names":["NativeModules","UIManager","setLayoutAnimationEnabledExperimental","localStyles","StyleSheet","create","container","flexDirection","alignItems","toggleContainer","ToggleItem","toggle","color","borderStyle","onPress","size","textStyle","shouldAnimate","activeToggle","HTextProps","bold","renderCustomObj","handlOnPress","LayoutAnimation","configureNext","Presets","easeInEaseOut","renderCustomToggle","func","CommonStyles","centerAll","flexRow","HeaderTabs","props","toggles","textColor","activeBorderStyle","containerStyle","activeTextColor","toggleViews","map","i","isActive","propTypes","PropTypes","array","isRequired","string","number","ViewPropTypes","style","bool","object","shape","text","oneOfType","defaultProps","defaultRefs","emptyObj"],"mappings":"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","file":"HeaderTabs.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  NativeModules,\n  LayoutAnimation,\n  ViewPropTypes,\n  View,\n  StyleSheet\n} from \"react-native\";\nimport { HText, Touchable } from \"./\";\nimport { CommonStyles, WIDTH, HEIGHT } from \"../commonAssets\";\nimport { defaultRefs, getGlobalColors } from \"../commonHelpers\";\n\n// for using LayoutAnimation on Android\nif (NativeModules.UIManager.setLayoutAnimationEnabledExperimental) {\n  NativeModules.UIManager.setLayoutAnimationEnabledExperimental(true);\n}\n\nconst localStyles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  toggleContainer: {\n    // height: \"100%\"\n  }\n});\n\nconst ToggleItem = ({\n  toggle,\n  color,\n  borderStyle,\n  onPress,\n  size,\n  textStyle,\n  shouldAnimate,\n  activeToggle,\n  HTextProps,\n  bold,\n  renderCustomObj\n}) => {\n  const handlOnPress = () => {\n    if (shouldAnimate && activeToggle !== toggle) {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    }\n    onPress(toggle);\n  };\n\n  const { toggle: renderCustomToggle, func } = renderCustomObj;\n\n  return (\n    <Touchable\n      style={[CommonStyles.centerAll, localStyles.toggleContainer, borderStyle]}\n      onPress={handlOnPress}\n    >\n      {toggle === renderCustomToggle && typeof func === \"function\"\n        ? func()\n        : null}\n      <View style={[CommonStyles.flexRow, CommonStyles.centerAll]}>\n        <HText\n          bold={bold}\n          size={size}\n          color={color}\n          style={textStyle}\n          text={toggle}\n          {...HTextProps}\n        />\n      </View>\n    </Touchable>\n  );\n};\n\nconst HeaderTabs = props => {\n  const {\n    size,\n    toggles,\n    activeToggle,\n    onPress,\n    textStyle,\n    textColor,\n    activeBorderStyle,\n    containerStyle,\n    activeTextColor,\n    shouldAnimate,\n    HTextProps,\n    bold,\n    renderCustomObj // { toggle: \"\", renderFunc: func }\n  } = props;\n\n  const toggleViews = toggles.map((toggle, i) => {\n    const isActive = toggle === activeToggle;\n    const borderStyle = isActive ? activeBorderStyle : props.borderStyle;\n    const color = isActive ? activeTextColor : textColor;\n\n    return (\n      <ToggleItem\n        renderCustomObj={renderCustomObj}\n        bold={bold}\n        HTextProps={HTextProps}\n        activeToggle={activeToggle}\n        shouldAnimate={shouldAnimate}\n        textStyle={textStyle}\n        key={toggle}\n        size={size}\n        toggle={toggle}\n        color={color}\n        borderStyle={borderStyle}\n        onPress={onPress}\n      />\n    );\n  });\n\n  return (\n    <View style={[localStyles.container, containerStyle]}>{toggleViews}</View>\n  );\n};\n\nHeaderTabs.propTypes = {\n  toggles: PropTypes.array.isRequired,\n  activeToggle: PropTypes.string.isRequired,\n  onPress: PropTypes.func.isRequired,\n  size: PropTypes.number,\n  textColor: PropTypes.string,\n  containerStyle: ViewPropTypes.style,\n  textStyle: ViewPropTypes.style,\n  borderStyle: ViewPropTypes.style,\n  activeBorderStyle: ViewPropTypes.style,\n  activeTextColor: PropTypes.string,\n  shouldAnimate: PropTypes.bool,\n  bold: PropTypes.bool,\n  HTextProps: PropTypes.object, // to pass into the HText rendered in a ToggleItem,\n  renderCustomObj: PropTypes.shape({\n    toggle: PropTypes.text,\n    func: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n  })\n};\n\nHeaderTabs.defaultProps = {\n  size: 3,\n  textColor: \"white\",\n  activeTextColor: \"black\",\n  containerStyle: defaultRefs.emptyObj,\n  textStyle: defaultRefs.emptyObj,\n  borderStyle: defaultRefs.emptyObj,\n  activeBorderStyle: defaultRefs.emptyObj,\n  shouldAnimate: false,\n  bold: false,\n  HTextProps: defaultRefs.emptyObj,\n  renderCustomObj: {\n    toggle: \"\",\n    func: false\n  }\n};\n\nexport { HeaderTabs };\n"]}