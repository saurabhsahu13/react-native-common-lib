{"version":3,"sources":["../../../lib/commonComponents/HText.js"],"names":["HText","color","props","size","bold","mT","mR","mB","mL","mBpx","mTpx","mLpx","mRpx","mAll","mAllpx","underline","letterSpacing","backgroundColor","disabled","flex","textAlign","alignSelf","fontWeight","fontFamily","superScriptTextColor","numberOfLines","onLayout","text","style","textProps","localStyles","hOrP","propTypes","PropTypes","oneOfType","string","object","number","isRequired","array","bool","func","defaultProps","defaultRefs","emptyObj","nullFunc"],"mappings":"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","file":"HText.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Text } from \"react-native\";\nimport { defaultRefs, getTextStyleFromProps } from \"../commonHelpers\";\n\nconst HText = props => {\n  const {\n    color,\n    size,\n    bold,\n    mT,\n    mR,\n    mB,\n    mL,\n    mBpx,\n    mTpx,\n    mLpx,\n    mRpx,\n    mAll,\n    mAllpx,\n    underline,\n    letterSpacing,\n    backgroundColor,\n    disabled,\n    flex,\n    textAlign,\n    alignSelf,\n    fontWeight,\n    fontFamily,\n    superScriptTextColor,\n    // not passed to getTextStyleFromProps\n    numberOfLines,\n    onLayout,\n    text,\n    style,\n    textProps,\n  } = props;\n\n  const localStyles = getTextStyleFromProps({\n    color,\n    size,\n    bold,\n    mT,\n    mR,\n    mB,\n    mL,\n    mBpx,\n    mTpx,\n    mLpx,\n    mRpx,\n    mAll,\n    mAllpx,\n    underline,\n    letterSpacing,\n    backgroundColor,\n    disabled,\n    flex,\n    textAlign,\n    alignSelf,\n    fontWeight,\n    fontFamily,\n    superScriptTextColor,\n    hOrP: \"h\",\n  });\n\n  return (\n    <Text\n      {...textProps}\n      style={[localStyles.text, style]}\n      numberOfLines={numberOfLines}\n      onLayout={onLayout}\n    >\n      {text}\n    </Text>\n  );\n};\n\nHText.propTypes = {\n  text: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.number,\n  ]).isRequired,\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  mAll: PropTypes.number,\n  mT: PropTypes.number,\n  mR: PropTypes.number,\n  mB: PropTypes.number,\n  mL: PropTypes.number,\n  mBpx: PropTypes.number,\n  mTpx: PropTypes.number,\n  mLpx: PropTypes.number,\n  mRpx: PropTypes.number,\n  mAllpx: PropTypes.number,\n  style: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object,\n    PropTypes.number,\n  ]),\n  underline: PropTypes.bool,\n  bold: PropTypes.bool,\n  letterSpacing: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  disabled: PropTypes.bool,\n  numberOfLines: PropTypes.number,\n  flex: PropTypes.number,\n  textAlign: PropTypes.string,\n  alignSelf: PropTypes.string,\n  textProps: PropTypes.object,\n  fontWeight: PropTypes.string,\n  fontFamily: PropTypes.string,\n  onLayout: PropTypes.func,\n  superScriptTextColor: PropTypes.string,\n};\n\nHText.defaultProps = {\n  color: \"black\",\n  size: 1,\n  mAll: 0,\n  mT: 0,\n  mR: 0,\n  mB: 0,\n  mL: 0,\n  mBpx: 0,\n  mTpx: 0,\n  mLpx: 0,\n  mRpx: 0,\n  mAllpx: 0,\n  style: defaultRefs.emptyObj,\n  underline: false,\n  bold: false,\n  letterSpacing: 0,\n  backgroundColor: \"\",\n  disabled: false,\n  numberOfLines: null,\n  flex: 0,\n  textAlign: \"left\",\n  alignSelf: \"auto\",\n  textProps: defaultRefs.emptyObj,\n  fontWeight: \"normal\",\n  fontFamily: \"\",\n  onLayout: defaultRefs.nullFunc,\n  superScriptTextColor: \"black\",\n};\n\n/*\n    TODO:\n    - standardize textProps for HText and PText with a TS @interface\n    - TypeScript definitions\n*/\n\nexport { HText };\n"]}