{"version":3,"sources":["../../../lib/commonComponents/Input.js"],"names":["localStyles","StyleSheet","create","bluePasswordEye","width","wordCount","position","bottom","right","Input","props","getWordCount","val","value","valToUse","split","map","t","trim","filter","l","length","handleOnChangeText","onChangeText","currentWordCount","text","isFocused","_inputRef","handlePress","onPress","disabled","focus","handleOnSubmitEditing","console","log","onSubmitEditing","handleOnKeyPress","multiline","renderWordCount","accentColor","wordCountBgColor","backgroundColor","renderPasswordToggle","password","passwordToggleFunc","eyeColor","passwordEyeIcon","renderPassToggle","CommonIcons","renderLabel","header","label","textProps","TextToUse","HText","PText","renderClearComp","handleRef","getRef","input","placeholder","placeholderTextColor","secureTextEntry","selectionColor","keyboardType","mAll","mT","mR","mB","mL","mBpx","mTpx","mLpx","mRpx","pL","pR","pT","pB","fontSize","defaultValue","borderWidth","returnKeyType","selectTextOnFocus","autoFocus","maxLength","keyboardAppearance","autoCapitalize","autoCorrect","editable","borderBottomWidth","numberOfLines","returnKeyLabel","inputContainerStyle","clearButtonMode","onBlur","activeOpacity","inputStyle","placeholderStyle","containerStyle","inputAccessoryViewID","color","convertedPlaceholderTextColor","showingPlaceholder","styles","paddingRight","paddingLeft","paddingTop","paddingBottom","flex","inputContainer","flexDirection","alignItems","justifyContent","borderTopColor","borderBottomColor","borderRightColor","borderLeftColor","marginTop","marginRight","marginBottom","marginLeft","marginStyle","margin","defaultRefs","emptyObj","style","React","Component","propTypes","PropTypes","number","func","isRequired","oneOfType","string","bool","array","object","ViewPropTypes","defaultProps","gray","nullFunc","transparent","size"],"mappings":"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","file":"Input.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ViewPropTypes,\n  TextInput,\n  StyleSheet,\n  View,\n  Image,\n} from \"react-native\";\nimport { CommonIcons } from \"../commonAssets\";\nimport { PText, HText, Touchable } from \"./\";\nimport {\n  defaultRefs,\n  getColorFromString,\n  getGlobalColors,\n  getGlobalTextStyles,\n  nToPercent,\n} from \"../commonHelpers\";\n\nconst localStyles = StyleSheet.create({\n  bluePasswordEye: {\n    width: 20,\n  },\n  wordCount: {\n    position: \"absolute\",\n    bottom: 7.5,\n    right: 7.5,\n  },\n});\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this._inputRef = null;\n  }\n\n  getWordCount = (val = \"\") => {\n    const { value } = this.props;\n\n    const valToUse = val || value;\n\n    if (valToUse) {\n      return valToUse\n        .split(\" \")\n        .map(t => t.trim())\n        .filter(l => !!l).length;\n    }\n\n    return 0;\n  };\n\n  handleOnChangeText = text => {\n    const { wordCount, onChangeText } = this.props;\n\n    if (wordCount) {\n      const currentWordCount = this.getWordCount(text);\n\n      if (currentWordCount === wordCount + 1) {\n        return null;\n      }\n    }\n\n    return onChangeText(text);\n  };\n\n  isFocused = () => this._inputRef && this._inputRef.isFocused();\n\n  handlePress = () => {\n    const { onPress, disabled } = this.props;\n    // console.log(`Handling press, _inputRef:`, this._inputRef);\n    // console.log(`Handling press, this.props.onPress`, this.props.onPress);\n\n    if (onPress) {\n      this.props.onPress();\n    }\n\n    if (!disabled && !this.isFocused()) {\n      this._inputRef.focus();\n    }\n  };\n\n  handleOnSubmitEditing = () => {\n    if (this._inputRef) {\n      // console.log(`THERE'S an _inputRef!`);\n    } else {\n      console.log(`THERE'S NO _inputRef...`);\n    }\n\n    this.props.onSubmitEditing();\n  };\n\n  handleOnKeyPress = event => {\n    const { multiline } = this.props;\n\n    if (multiline) {\n      // console.log(`key press event:`, event);\n    }\n  };\n\n  renderWordCount = () => {\n    const { wordCount, accentColor, wordCountBgColor } = this.props;\n\n    if (wordCount) {\n      const currentWordCount = this.getWordCount();\n\n      return (\n        <View\n          style={[localStyles.wordCount, { backgroundColor: wordCountBgColor }]}\n        >\n          <PText\n            color={accentColor}\n            text={`${currentWordCount} Word Count (${wordCount})`}\n          />\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  renderPasswordToggle = () => {\n    const {\n      password,\n      passwordToggleFunc,\n      eyeColor,\n      passwordEyeIcon,\n      renderPassToggle,\n    } = this.props;\n\n    if (renderPassToggle) {\n      return renderPassToggle();\n    }\n\n    if (password) {\n      return (\n        <Touchable onPress={passwordToggleFunc}>\n          <Image\n            style={localStyles.bluePasswordEye}\n            resizeMode={\"contain\"}\n            source={passwordEyeIcon || CommonIcons[`${eyeColor}PasswordEye`]}\n          />\n        </Touchable>\n      );\n    }\n\n    return null;\n  };\n\n  renderLabel = () => {\n    const { header, label, accentColor, textProps } = this.props;\n\n    const TextToUse = header ? HText : PText;\n\n    if (label) {\n      return <TextToUse text={label} color={accentColor} {...textProps} />;\n    }\n\n    return null;\n  };\n\n  renderClearComp = () => {\n    const { renderClearComp } = this.props;\n\n    if (renderClearComp) {\n      return renderClearComp();\n    }\n\n    return null;\n  };\n\n  handleRef = input => {\n    const { getRef } = this.props;\n\n    this._inputRef = input;\n    if (getRef) {\n      getRef(this._inputRef);\n    }\n  };\n\n  render() {\n    const {\n      value,\n      placeholder,\n      placeholderTextColor,\n      secureTextEntry,\n      selectionColor,\n      keyboardType,\n      mAll,\n      mT,\n      mR,\n      mB,\n      mL,\n      mBpx,\n      mTpx,\n      mLpx,\n      mRpx,\n      pL,\n      pR,\n      pT,\n      pB,\n      accentColor,\n      backgroundColor,\n      multiline,\n      fontSize,\n      defaultValue,\n      borderWidth,\n      returnKeyType,\n      selectTextOnFocus,\n      autoFocus,\n      width,\n      maxLength,\n      keyboardAppearance,\n      autoCapitalize,\n      autoCorrect,\n      editable,\n      borderBottomWidth,\n      numberOfLines,\n      returnKeyLabel,\n      inputContainerStyle,\n      clearButtonMode,\n      onBlur,\n      activeOpacity,\n      inputStyle,\n      placeholderStyle,\n      containerStyle,\n      inputAccessoryViewID,\n    } = this.props;\n\n    const color = getColorFromString(accentColor);\n    const convertedPlaceholderTextColor = getColorFromString(\n      placeholderTextColor,\n    );\n    const showingPlaceholder = !value;\n\n    const styles = {\n      inputStyle: {\n        color,\n        paddingRight: pR,\n        paddingLeft: pL,\n        paddingTop: pT,\n        paddingBottom: pB,\n        fontSize,\n        backgroundColor,\n        flex: 1,\n      },\n      inputContainer: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderWidth,\n        borderBottomWidth,\n        borderTopColor: color,\n        borderBottomColor: color,\n        borderRightColor: color,\n        borderLeftColor: color,\n      },\n      containerStyle: {\n        marginTop:\n          mTpx || nToPercent(mT, \"height\") || nToPercent(mAll, \"height\"),\n        marginRight:\n          mRpx || nToPercent(mR, \"width\") || nToPercent(mAll, \"width\"),\n        marginBottom:\n          mBpx || nToPercent(mB, \"height\") || nToPercent(mAll, \"height\"),\n        marginLeft:\n          mLpx || nToPercent(mL, \"width\") || nToPercent(mAll, \"width\"),\n        alignItems: \"flex-start\",\n        width,\n      },\n    };\n\n    const marginStyle = mAll ? { margin: mAll } : defaultRefs.emptyObj;\n    const style = showingPlaceholder\n      ? [styles.inputStyle, inputStyle, placeholderStyle]\n      : [styles.inputStyle, inputStyle];\n\n    return (\n      <Touchable\n        activeOpacity={activeOpacity}\n        onPress={this.handlePress}\n        style={[styles.containerStyle, marginStyle, containerStyle]}\n        pointerEvents={\"auto\"}\n      >\n        {this.renderLabel()}\n        <View\n          style={[styles.inputContainer, inputContainerStyle]}\n          // pointerEvents={this.props.onPress ? \"none\" : \"box-none\"}\n          pointerEvents={\"box-none\"}\n        >\n          <TextInput\n            ref={this.handleRef}\n            underlineColorAndroid=\"transparent\"\n            placeholder={placeholder}\n            placeholderTextColor={convertedPlaceholderTextColor}\n            selectionColor={getColorFromString(selectionColor)}\n            autoCorrect={autoCorrect}\n            style={style}\n            value={value}\n            onChangeText={this.handleOnChangeText}\n            autoCapitalize={autoCapitalize}\n            secureTextEntry={secureTextEntry}\n            keyboardType={keyboardType}\n            multiline={multiline}\n            defaultValue={defaultValue}\n            returnKeyType={returnKeyType}\n            onSubmitEditing={this.handleOnSubmitEditing}\n            selectTextOnFocus={selectTextOnFocus}\n            onFocus={this.handlePress}\n            autoFocus={autoFocus}\n            maxLength={maxLength}\n            keyboardAppearance={keyboardAppearance}\n            editable={editable}\n            numberOfLines={numberOfLines}\n            returnKeyLabel={returnKeyLabel}\n            onKeyPress={this.handleOnKeyPress}\n            clearButtonMode={clearButtonMode}\n            onBlur={onBlur}\n            inputAccessoryViewID={inputAccessoryViewID}\n          />\n          {this.renderPasswordToggle()}\n          {this.renderClearComp()}\n        </View>\n        {this.renderWordCount()}\n      </Touchable>\n    );\n  }\n}\n\nInput.propTypes = {\n  activeOpacity: PropTypes.number,\n  onChangeText: PropTypes.func.isRequired,\n  placeholderTextColor: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  passwordToggleFunc: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  selectionColor: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  placeholder: PropTypes.string,\n  secureTextEntry: PropTypes.bool,\n  inputStyle: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object,\n    PropTypes.number,\n  ]),\n  placeholderStyle: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object,\n    PropTypes.number,\n  ]),\n  inputContainerStyle: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object,\n    PropTypes.number,\n  ]),\n  mAll: PropTypes.number,\n  mB: PropTypes.number,\n  mL: PropTypes.number,\n  mR: PropTypes.number,\n  mT: PropTypes.number,\n  mBpx: PropTypes.number,\n  mTpx: PropTypes.number,\n  mLpx: PropTypes.number,\n  mRpx: PropTypes.number,\n  pL: PropTypes.number,\n  pR: PropTypes.number,\n  pT: PropTypes.number,\n  pB: PropTypes.number,\n  fontSize: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  maxLength: PropTypes.number,\n  autoFocus: PropTypes.bool,\n  multiline: PropTypes.bool,\n  accentColor: PropTypes.string,\n  returnKeyType: PropTypes.string,\n  onSubmitEditing: PropTypes.func,\n  autoCapitalize: PropTypes.string,\n  keyboardType: PropTypes.string,\n  selectTextOnFocus: PropTypes.bool,\n  borderWidth: PropTypes.number,\n  borderBottomWidth: PropTypes.number,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  keyboardAppearance: PropTypes.string,\n  label: PropTypes.string,\n  backgroundColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  autoCorrect: PropTypes.bool,\n  password: PropTypes.bool,\n  onPress: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  wordCount: PropTypes.number,\n  numberOfLines: PropTypes.number,\n  eyeColor: PropTypes.string,\n  editable: PropTypes.bool,\n  returnKeyLabel: PropTypes.string,\n  wordCountBgColor: PropTypes.string,\n  disabled: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  passwordEyeIcon: PropTypes.number,\n  header: PropTypes.bool,\n  clearButtonMode: PropTypes.string,\n  renderPassToggle: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  renderClearComp: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  getRef: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  onBlur: PropTypes.func,\n  inputAccessoryViewID: PropTypes.string,\n};\n\nInput.defaultProps = {\n  activeOpacity: 0.9,\n  placeholderTextColor: \"darkPlaceholder\",\n  selectionColor: getGlobalColors().gray,\n  placeholder: \"Enter text here...\",\n  secureTextEntry: false,\n  mT: 0,\n  mR: 0,\n  mB: 0,\n  mL: 0,\n  mAll: 0,\n  mBpx: 0,\n  mTpx: 0,\n  mLpx: 0,\n  mRpx: 0,\n  pL: 0,\n  pR: 0,\n  pT: 0,\n  pB: 0,\n  fontSize: 18,\n  width: \"100%\",\n  maxLength: 150,\n  autoFocus: false,\n  accentColor: \"blue\",\n  returnKeyType: \"default\",\n  onSubmitEditing: defaultRefs.nullFunc,\n  autoCapitalize: \"sentences\",\n  keyboardType: \"default\",\n  selectTextOnFocus: false,\n  borderWidth: 0,\n  borderBottomWidth: 1,\n  defaultValue: \"\",\n  keyboardAppearance: \"dark\",\n  multiline: false,\n  label: \"\",\n  containerStyle: defaultRefs.emptyObj,\n  inputContainerStyle: defaultRefs.emptyObj,\n  backgroundColor: getGlobalColors().transparent,\n  autoCorrect: false,\n  onPress: false,\n  password: false,\n  passwordToggleFunc: false,\n  wordCount: 0,\n  numberOfLines: 1,\n  inputStyle: defaultRefs.emptyObj,\n  placeholderStyle: defaultRefs.emptyObj,\n  eyeColor: \"blue\",\n  editable: true,\n  returnKeyLabel: \"\",\n  wordCountBgColor: getGlobalColors().transparent,\n  disabled: false,\n  passwordEyeIcon: null,\n  textProps: {\n    size: 4,\n  },\n  header: false,\n  clearButtonMode: \"never\",\n  renderPassToggle: defaultRefs.nullFunc,\n  renderClearComp: defaultRefs.nullFunc,\n  getRef: defaultRefs.nullFunc,\n  onBlur: defaultRefs.nullFunc,\n  inputAccessoryViewID: \"\",\n};\n\nexport { Input };\n\n/*\n  TODO: TS interface for textProps\n*/\n"]}