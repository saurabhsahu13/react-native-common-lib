{"version":3,"sources":["../../../lib/commonHelpers/styleHelpers.js"],"names":["getHashFromProps","Object","keys","textProps","reduce","a","b","concat","getFontWeight","fontWeight","bold","fontWeightFromTextStyle","getTextColor","color","disabled","getMargin","mAllpx","mAll","mSidepx","mSide","hOrW","getTextDecorationLine","underline","getTextStyle","size","hOrP","getLetterSpacing","letterSpacing","defaultRefs","emptyObj","getLineHeight","lineHeight","getBackgroundColor","backgroundColor","getButtonStyleFromProps","alignSelf","mT","mTpx","mR","mRpx","mB","mBpx","mL","mLpx","padAll","padY","padX","borderWidth","borderColor","StyleSheet","create","button","alignItems","justifyContent","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingBottom","paddingRight","paddingLeft","getTouchableTextStyleFromProps","fontFamilyProp","fontFamily","header","textStyleFromSize","text","getTextStyleFromProps","textAlign","superScriptTextColor","flex","textSizeStyle","applyLetterSpacing","textDecorationLine","superScriptText","textAlignVertical","fontSize","zIndex","position"],"mappings":"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","file":"styleHelpers.js","sourcesContent":["import { StyleSheet } from \"react-native\";\nimport { memoize } from \"underscore\";\nimport {\n  getColorFromString,\n  nToPercent,\n  getDisabledColorFromString,\n  getGlobalTextStyles,\n  defaultRefs,\n} from \"./\";\n\n// const EXCLUDED_TYPES = {\n//   object: true,\n//   function: true,\n// };\n\n// const getHashFromProps = textProps =>\n//   Object.keys(textProps).reduce((a, b) => {\n//     if (!EXCLUDED_TYPES[typeof textProps[b]]) {\n//       return a.concat(textProps[b]);\n//     }\n\n//     return a;\n//   }, \"\");\n\nconst getHashFromProps = textProps =>\n  Object.keys(textProps).reduce((a, b) => a.concat(`-${textProps[b]}`), \"\");\n\nconst getFontWeight = memoize(\n  (fontWeight, bold, fontWeightFromTextStyle) => {\n    if (bold) {\n      return \"bold\";\n    }\n\n    if (\n      fontWeight &&\n      fontWeight !== \"normal\" &&\n      fontWeight !== fontWeightFromTextStyle\n    ) {\n      return fontWeight;\n    }\n\n    return fontWeightFromTextStyle || \"normal\";\n  },\n  (fontWeight, bold, fontWeightFromTextStyle) =>\n    `${fontWeight}-${bold}-${fontWeightFromTextStyle}`,\n);\n\nconst getTextColor = memoize(\n  (color, disabled) =>\n    disabled ? getDisabledColorFromString(color) : getColorFromString(color),\n  (color, disabled) => `${color}-${disabled}`,\n);\n\nconst getMargin = memoize(\n  (mAllpx, mAll, mSidepx, mSide, hOrW) =>\n    mAllpx || mSidepx || nToPercent(mSide, hOrW) || nToPercent(mAll, hOrW),\n  (mAllpx, mAll, mSidepx, mSide, hOrW) =>\n    `${mAllpx}-${mAll}-${mSidepx}-${mSide}-${hOrW}`,\n);\n\nconst getTextDecorationLine = memoize(\n  underline => (underline ? \"underline\" : \"none\"),\n);\n\nconst getTextStyle = memoize(\n  (size, hOrP) => getGlobalTextStyles()[`${hOrP}${size}`],\n  (size, hOrP) => `${hOrP}-${size}`,\n);\n\nconst getLetterSpacing = memoize(\n  letterSpacing => (letterSpacing ? { letterSpacing } : defaultRefs.emptyObj),\n);\n\nconst getLineHeight = memoize(\n  lineHeight => (lineHeight ? { lineHeight } : defaultRefs.emptyObj),\n);\n\nexport const getBackgroundColor = memoize(\n  backgroundColor =>\n    backgroundColor\n      ? { backgroundColor: getColorFromString(backgroundColor) }\n      : defaultRefs.emptyObj,\n);\n\nexport const getButtonStyleFromProps = memoize(\n  ({\n    alignSelf,\n    disabled,\n    backgroundColor,\n    mAll,\n    mAllpx,\n    mT,\n    mTpx,\n    mR,\n    mRpx,\n    mB,\n    mBpx,\n    mL,\n    mLpx,\n    padAll,\n    padY,\n    padX,\n    borderWidth,\n    color,\n    borderColor,\n  }) => {\n    return StyleSheet.create({\n      button: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        alignSelf,\n        backgroundColor: getTextColor(backgroundColor, disabled),\n        marginTop: getMargin(mAllpx, mAll, mTpx, mT, \"height\"),\n        marginRight: getMargin(mAllpx, mAll, mRpx, mR, \"height\"),\n        marginBottom: getMargin(mAllpx, mAll, mBpx, mB, \"height\"),\n        marginLeft: getMargin(mAllpx, mAll, mLpx, mL, \"height\"),\n        paddingTop: padAll || padY,\n        paddingBottom: padAll || padY,\n        paddingRight: padAll || padX,\n        paddingLeft: padAll || padX,\n        borderWidth,\n        borderColor: getColorFromString(borderColor || color),\n      },\n    });\n  },\n  getHashFromProps,\n);\n\nexport const getTouchableTextStyleFromProps = memoize(\n  ({\n    color,\n    disabled,\n    fontWeight,\n    fontFamily: fontFamilyProp,\n    mT,\n    mB,\n    mL,\n    mR,\n    mAll,\n    mBpx,\n    mTpx,\n    mLpx,\n    mRpx,\n    mAllpx,\n    header,\n    size,\n    bold,\n  }) => {\n    const textStyleFromSize = header\n      ? getGlobalTextStyles()[`h${size}`]\n      : getGlobalTextStyles()[`p${size}`];\n    const fontFamily = fontFamilyProp || textStyleFromSize.fontFamily;\n\n    return StyleSheet.create({\n      text: {\n        ...textStyleFromSize,\n        color: getTextColor(color, disabled),\n        lineHeight: null,\n        fontWeight: getFontWeight(\n          fontWeight,\n          bold,\n          textStyleFromSize.fontWeight,\n        ),\n        marginTop: getMargin(mAllpx, mAll, mTpx, mT, \"height\"),\n        marginRight: getMargin(mAllpx, mAll, mRpx, mR, \"height\"),\n        marginBottom: getMargin(mAllpx, mAll, mBpx, mB, \"height\"),\n        marginLeft: getMargin(mAllpx, mAll, mLpx, mL, \"height\"),\n        fontFamily,\n      },\n    });\n  },\n  getHashFromProps,\n);\n\nexport const getTextStyleFromProps = memoize(\n  ({\n    textAlign,\n    alignSelf,\n    color,\n    superScriptTextColor,\n    disabled,\n    size,\n    fontWeight,\n    fontFamily: fontFamilyProp,\n    bold,\n    mAll,\n    mAllpx,\n    mT,\n    mTpx,\n    mR,\n    mRpx,\n    mB,\n    mBpx,\n    mL,\n    mLpx,\n    underline,\n    flex,\n    letterSpacing,\n    lineHeight,\n    backgroundColor,\n    hOrP,\n  }) => {\n    const textSizeStyle = getTextStyle(size, hOrP);\n    const applyLetterSpacing = getLetterSpacing(letterSpacing);\n    const fontFamily = fontFamilyProp || textSizeStyle.fontFamily;\n\n    const text = {\n      ...textSizeStyle,\n      ...applyLetterSpacing,\n      ...getLineHeight(lineHeight),\n      ...getBackgroundColor(backgroundColor),\n      textAlign,\n      alignSelf,\n      fontWeight: getFontWeight(fontWeight, bold, textSizeStyle.fontWeight),\n      color: getTextColor(color, disabled),\n      marginTop: getMargin(mAllpx, mAll, mTpx, mT, \"height\"),\n      marginRight: getMargin(mAllpx, mAll, mRpx, mR, \"height\"),\n      marginBottom: getMargin(mAllpx, mAll, mBpx, mB, \"height\"),\n      marginLeft: getMargin(mAllpx, mAll, mLpx, mL, \"height\"),\n      textDecorationLine: getTextDecorationLine(underline),\n      flex,\n      fontFamily,\n    };\n\n    return StyleSheet.create({\n      text,\n      superScriptText: {\n        textAlignVertical: \"top\",\n        fontSize: 10,\n        zIndex: 1000,\n        position: \"relative\",\n        color: getTextColor(superScriptTextColor, disabled),\n        fontFamily,\n      },\n    });\n  },\n  getHashFromProps,\n);\n"]}