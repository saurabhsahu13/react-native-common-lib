{"version":3,"sources":["../../../lib/commonAssets/CreateTextStyles.js"],"names":["DEFAULT_PARAGRAPH_SIZES","p1","p2","p3","p4","p5","p6","DEFAULT_HEADER_SIZES","h1","h2","h3","h4","h5","h6","DEFAULT_H_FONT_WEIGHT","DEFAULT_P_FONT_WEIGHT","DEFAULT_FONT_FAMILY","CreateTextStyles","config","buildTextStyles","StyleSheet","create","createParFontStyleObj","createHeaderFontStyleObj","paragraphStyles","Object","keys","paragraphSizes","forEach","fontSize","key","fontFamily","fontWeight","pFontWeight","lineHeight","pLineHeightCoefficient","applyPLetterSpacing","letterSpacing","headerStyles","headerSizes","hLineHeightCoefficient","applyHLetterSpacing","hFontWeight","allTStyles","DefaultTextStyles"],"mappings":"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","file":"CreateTextStyles.js","sourcesContent":["import { StyleSheet } from \"react-native\";\n\nconst DEFAULT_PARAGRAPH_SIZES = {\n  p1: 18,\n  p2: 16,\n  p3: 14,\n  p4: 12,\n  p5: 10,\n  p6: 8\n};\nconst DEFAULT_HEADER_SIZES = {\n  h1: 30,\n  h2: 26,\n  h3: 22,\n  h4: 20,\n  h5: 18,\n  h6: 16\n};\nconst DEFAULT_H_FONT_WEIGHT = \"300\";\nconst DEFAULT_P_FONT_WEIGHT = \"300\";\nconst DEFAULT_FONT_FAMILY = \"System\";\n\nclass CreateTextStyles {\n  constructor(config = {}) {\n    const {\n      paragraphSizes = DEFAULT_PARAGRAPH_SIZES,\n      headerSizes = DEFAULT_HEADER_SIZES,\n      hFontWeight = DEFAULT_H_FONT_WEIGHT,\n      pFontWeight = DEFAULT_P_FONT_WEIGHT,\n      fontFamily = DEFAULT_FONT_FAMILY,\n      applyPLetterSpacing = false,\n      applyHLetterSpacing = false,\n      hLineHeightCoefficient = 1.65,\n      pLineHeightCoefficient = 1.65,\n    } = config;\n\n    this.paragraphSizes = paragraphSizes;\n    this.headerSizes = headerSizes;\n    this.hFontWeight = hFontWeight;\n    this.pFontWeight = pFontWeight;\n    this.fontFamily = fontFamily;\n    this.applyPLetterSpacing = applyPLetterSpacing;\n    this.applyHLetterSpacing = applyHLetterSpacing;\n    this.hLineHeightCoefficient = hLineHeightCoefficient\n    this.pLineHeightCoefficient = pLineHeightCoefficient\n    this.allTStyles = this.buildTextStyles();\n  }\n\n  get allTextStyles() {\n    return this.allTStyles;\n  }\n\n  buildTextStyles = () => {\n    return StyleSheet.create({\n      ...this.createParFontStyleObj(),\n      ...this.createHeaderFontStyleObj()\n    });\n  };\n\n  createParFontStyleObj = () => {\n    const paragraphStyles = {};\n\n    Object.keys(this.paragraphSizes).forEach(key => {\n      const fontSize = this.paragraphSizes[key];\n\n      paragraphStyles[key] = {\n        fontFamily: this.fontFamily,\n        fontSize,\n        fontWeight: this.pFontWeight,\n        lineHeight: fontSize * this.pLineHeightCoefficient\n      };\n\n      if (this.applyPLetterSpacing) {\n        paragraphStyles[key].letterSpacing = fontSize / 12;\n      }\n    });\n\n    return paragraphStyles;\n  };\n\n  createHeaderFontStyleObj = () => {\n    const headerStyles = {};\n\n    Object.keys(this.headerSizes).forEach(key => {\n      const fontSize = this.headerSizes[key];\n\n      headerStyles[key] = {\n        fontFamily: this.fontFamily,\n        fontSize,\n        fontWeight: this.pFontWeight,\n        lineHeight: fontSize * this.hLineHeightCoefficient\n      };\n\n      if (this.applyHLetterSpacing) {\n        headerStyles[key].letterSpacing = fontSize / 12;\n      }\n    });\n\n    return headerStyles;\n  };\n}\n\nconst DefaultTextStyles = new CreateTextStyles();\n\nexport { CreateTextStyles, DefaultTextStyles };\n"]}