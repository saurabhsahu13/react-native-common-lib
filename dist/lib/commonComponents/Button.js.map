{"version":3,"sources":["../../../lib/commonComponents/Button.js"],"names":["emptyObj","defaultRefs","Button","alignSelf","props","disabled","backgroundColor","mAll","mAllpx","mT","mTpx","mR","mRpx","mB","mBpx","mL","mLpx","padAll","padY","padX","borderWidth","color","borderColor","resizeMode","imageStyle","activeOpacity","image","title","onPress","header","commonTextProps","textStyle","buttonStyle","otherProps","TextToUse","HText","PText","localStyles","renderInside","source","children","button","propTypes","PropTypes","number","bool","string","oneOfType","object","array","func","isRequired","labelSize","defaultProps"],"mappings":"oWAAA,4B,2CACA,qC,mDACA,yCACA,mBACA,+C,2RAMQA,S,CAAaC,0B,CAAbD,Q,CAKR,GAAME,QAAS,QAATA,OAAS,OAAS,IAEpBC,UAFoB,CAiClBC,KAjCkB,CAEpBD,SAFoB,CAGpBE,QAHoB,CAiClBD,KAjCkB,CAGpBC,QAHoB,CAIpBC,eAJoB,CAiClBF,KAjCkB,CAIpBE,eAJoB,CAKpBC,IALoB,CAiClBH,KAjCkB,CAKpBG,IALoB,CAMpBC,MANoB,CAiClBJ,KAjCkB,CAMpBI,MANoB,CAOpBC,EAPoB,CAiClBL,KAjCkB,CAOpBK,EAPoB,CAQpBC,IARoB,CAiClBN,KAjCkB,CAQpBM,IARoB,CASpBC,EAToB,CAiClBP,KAjCkB,CASpBO,EAToB,CAUpBC,IAVoB,CAiClBR,KAjCkB,CAUpBQ,IAVoB,CAWpBC,EAXoB,CAiClBT,KAjCkB,CAWpBS,EAXoB,CAYpBC,IAZoB,CAiClBV,KAjCkB,CAYpBU,IAZoB,CAapBC,EAboB,CAiClBX,KAjCkB,CAapBW,EAboB,CAcpBC,IAdoB,CAiClBZ,KAjCkB,CAcpBY,IAdoB,CAepBC,MAfoB,CAiClBb,KAjCkB,CAepBa,MAfoB,CAgBpBC,IAhBoB,CAiClBd,KAjCkB,CAgBpBc,IAhBoB,CAiBpBC,IAjBoB,CAiClBf,KAjCkB,CAiBpBe,IAjBoB,CAkBpBC,WAlBoB,CAiClBhB,KAjCkB,CAkBpBgB,WAlBoB,CAmBpBC,KAnBoB,CAiClBjB,KAjCkB,CAmBpBiB,KAnBoB,CAoBpBC,WApBoB,CAiClBlB,KAjCkB,CAoBpBkB,WApBoB,CAsBpBC,UAtBoB,CAiClBnB,KAjCkB,CAsBpBmB,UAtBoB,CAuBpBC,UAvBoB,CAiClBpB,KAjCkB,CAuBpBoB,UAvBoB,CAwBpBC,aAxBoB,CAiClBrB,KAjCkB,CAwBpBqB,aAxBoB,CAyBpBC,KAzBoB,CAiClBtB,KAjCkB,CAyBpBsB,KAzBoB,CA0BpBC,KA1BoB,CAiClBvB,KAjCkB,CA0BpBuB,KA1BoB,CA2BpBC,OA3BoB,CAiClBxB,KAjCkB,CA2BpBwB,OA3BoB,CA4BpBC,MA5BoB,CAiClBzB,KAjCkB,CA4BpByB,MA5BoB,CA6BpBC,eA7BoB,CAiClB1B,KAjCkB,CA6BpB0B,eA7BoB,CA8BpBC,SA9BoB,CAiClB3B,KAjCkB,CA8BpB2B,SA9BoB,CA+BpBC,WA/BoB,CAiClB5B,KAjCkB,CA+BpB4B,WA/BoB,CAgCjBC,UAhCiB,0BAiClB7B,KAjCkB,iSAmCtB,GAAM8B,WAAYL,OAASM,OAAT,CAAiBC,OAAnC,CAEA,GAAMC,aAAc,2CAAwB,CAC1ClC,mBAD0C,CAE1CE,iBAF0C,CAG1CC,+BAH0C,CAI1CC,SAJ0C,CAK1CC,aAL0C,CAM1CC,KAN0C,CAO1CC,SAP0C,CAQ1CC,KAR0C,CAS1CC,SAT0C,CAU1CC,KAV0C,CAW1CC,SAX0C,CAY1CC,KAZ0C,CAa1CC,SAb0C,CAc1CC,aAd0C,CAe1CC,SAf0C,CAgB1CC,SAhB0C,CAiB1CC,uBAjB0C,CAkB1CC,WAlB0C,CAmB1CC,uBAnB0C,CAAxB,CAApB,CAsBA,GAAMgB,cAAe,QAAfA,aAAe,EAAM,CACzB,GAAIX,OAAS,CAACD,KAAd,CAAqB,CACnB,MAAO,+BAAC,SAAD,aAAeI,eAAf,EAAgC,KAAMH,KAAtC,CAA6C,MAAOI,SAApD,kDAAP,CACD,CAED,GAAIL,OAAS,CAACC,KAAd,CAAqB,CACnB,GAAMY,QAAS,kCAAeb,KAAf,CAAf,CAEA,MACE,+BAAC,kBAAD,EAAO,OAAQa,MAAf,CAAuB,WAAYhB,UAAnC,CAA+C,MAAOC,UAAtD,iDADF,CAGD,CAID,MAAO,CAACpB,MAAMoC,QAAP,CAAP,CACD,CAhBD,CAkBA,MACE,+BAAC,WAAD,WACE,QAASZ,OADX,CAEE,SAAUvB,QAFZ,CAGE,cAAeoB,aAHjB,CAIE,MAAO,CAACY,YAAYI,MAAb,CAAqBT,WAArB,CAJT,EAKMC,UALN,mDAOGK,cAPH,CADF,CAWD,CAxFD,CA0FApC,OAAOwC,SAAP,CAAmB,CACjBjB,cAAekB,oBAAUC,MADR,CAEjBvC,SAAUsC,oBAAUE,IAFH,CAGjB1C,UAAWwC,oBAAUG,MAHJ,CAIjBxC,gBAAiBqC,oBAAUG,MAJV,CAKjBd,YAAaW,oBAAUI,SAAV,CAAoB,CAC/BJ,oBAAUG,MADqB,CAE/BH,oBAAUC,MAFqB,CAG/BD,oBAAUK,MAHqB,CAI/BL,oBAAUM,KAJqB,CAApB,CALI,CAWjB5B,MAAOsB,oBAAUG,MAXA,CAYjBvC,KAAMoC,oBAAUC,MAZC,CAajBnC,GAAIkC,oBAAUC,MAbG,CAcjBjC,GAAIgC,oBAAUC,MAdG,CAejB/B,GAAI8B,oBAAUC,MAfG,CAgBjB7B,GAAI4B,oBAAUC,MAhBG,CAiBjB9B,KAAM6B,oBAAUC,MAjBC,CAkBjBlC,KAAMiC,oBAAUC,MAlBC,CAmBjB5B,KAAM2B,oBAAUC,MAnBC,CAoBjBhC,KAAM+B,oBAAUC,MApBC,CAqBjBpC,OAAQmC,oBAAUC,MArBD,CAsBjBhB,QAASe,oBAAUO,IAAV,CAAeC,UAtBP,CAuBjBpB,UAAWY,oBAAUI,SAAV,CAAoB,CAC7BJ,oBAAUG,MADmB,CAE7BH,oBAAUC,MAFmB,CAG7BD,oBAAUK,MAHmB,CAI7BL,oBAAUM,KAJmB,CAApB,CAvBM,CA6BjBtB,MAAOgB,oBAAUG,MA7BA,CA8BjB3B,KAAMwB,oBAAUC,MA9BC,CA+BjB1B,KAAMyB,oBAAUC,MA/BC,CAgCjB3B,OAAQ0B,oBAAUC,MAhCD,CAiCjBQ,UAAWT,oBAAUC,MAjCJ,CAkCjBxB,YAAauB,oBAAUC,MAlCN,CAmCjBtB,YAAaqB,oBAAUI,SAAV,CAAoB,CAACJ,oBAAUE,IAAX,CAAiBF,oBAAUG,MAA3B,CAApB,CAnCI,CAoCjBpB,MAAOiB,oBAAUI,SAAV,CAAoB,CACzBJ,oBAAUE,IADe,CAEzBF,oBAAUC,MAFe,CAGzBD,oBAAUG,MAHe,CAApB,CApCU,CAyCjBvB,WAAYoB,oBAAUG,MAzCL,CA0CjBtB,WAAYmB,oBAAUI,SAAV,CAAoB,CAC9BJ,oBAAUM,KADoB,CAE9BN,oBAAUK,MAFoB,CAG9BL,oBAAUC,MAHoB,CAApB,CA1CK,CA+CjBf,OAAQc,oBAAUE,IA/CD,CAgDjBf,gBAAiBa,oBAAUK,MAhDV,CAAnB,CAmDA9C,OAAOmD,YAAP,CAAsB,CACpB5B,cAAe,GADK,CAEpBtB,UAAW,MAFS,CAGpBG,gBAAiB,MAHG,CAIpB0B,YAAahC,QAJO,CAKpBqB,MAAO,OALa,CAMpBd,KAAM,CANc,CAOpBE,GAAI,CAPgB,CAQpBE,GAAI,CARgB,CASpBE,GAAI,CATgB,CAUpBE,GAAI,CAVgB,CAWpBD,KAAM,CAXc,CAYpBJ,KAAM,CAZc,CAapBM,KAAM,CAbc,CAcpBJ,KAAM,CAdc,CAepBJ,OAAQ,CAfY,CAgBpBS,OAAQ,CAhBY,CAiBpBE,KAAM,CAjBc,CAkBpBD,KAAM,CAlBc,CAmBpBa,UAAW/B,QAnBS,CAoBpB2B,MAAO,EApBa,CAqBpByB,UAAW,CArBS,CAsBpB/C,SAAU,KAtBU,CAuBpBe,YAAa,CAvBO,CAwBpBE,YAAa,KAxBO,CAyBpBI,MAAO,KAzBa,CA0BpBH,WAAY,SA1BQ,CA2BpBC,WAAYxB,QA3BQ,CA4BpB6B,OAAQ,KA5BY,CA6BpBC,gBAAiB9B,QA7BG,CAAtB,C,QAgCSE,M,CAAAA,M","file":"Button.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Image } from \"react-native\";\nimport { Touchable, PText, HText } from \".\";\nimport {\n  defaultRefs,\n  getImageSource,\n  getButtonStyleFromProps,\n} from \"../commonHelpers\";\n\nconst { emptyObj } = defaultRefs;\n\n// IF THE TITLE PROP IS DEFINED, IT WILL RENDER A 'TITLED BUTTON'\n// ELSE, IT WILL RENDER A BUTTON WITH ALL CHILDREN INSIDE\n\nconst Button = props => {\n  const {\n    alignSelf,\n    disabled,\n    backgroundColor,\n    mAll,\n    mAllpx,\n    mT,\n    mTpx,\n    mR,\n    mRpx,\n    mB,\n    mBpx,\n    mL,\n    mLpx,\n    padAll,\n    padY,\n    padX,\n    borderWidth,\n    color,\n    borderColor,\n    // locally used props\n    resizeMode,\n    imageStyle,\n    activeOpacity,\n    image,\n    title,\n    onPress,\n    header,\n    commonTextProps,\n    textStyle,\n    buttonStyle,\n    ...otherProps\n  } = props;\n\n  const TextToUse = header ? HText : PText;\n\n  const localStyles = getButtonStyleFromProps({\n    alignSelf,\n    disabled,\n    backgroundColor,\n    mAll,\n    mAllpx,\n    mT,\n    mTpx,\n    mR,\n    mRpx,\n    mB,\n    mBpx,\n    mL,\n    mLpx,\n    padAll,\n    padY,\n    padX,\n    borderWidth,\n    color,\n    borderColor,\n  });\n\n  const renderInside = () => {\n    if (title && !image) {\n      return <TextToUse {...commonTextProps} text={title} style={textStyle} />;\n    }\n\n    if (image && !title) {\n      const source = getImageSource(image);\n\n      return (\n        <Image source={source} resizeMode={resizeMode} style={imageStyle} />\n      );\n    }\n\n    // TODO: Add image prop WITH title\n\n    return [props.children];\n  };\n\n  return (\n    <Touchable\n      onPress={onPress}\n      disabled={disabled}\n      activeOpacity={activeOpacity}\n      style={[localStyles.button, buttonStyle]}\n      {...otherProps}\n    >\n      {renderInside()}\n    </Touchable>\n  );\n};\n\nButton.propTypes = {\n  activeOpacity: PropTypes.number,\n  disabled: PropTypes.bool,\n  alignSelf: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  buttonStyle: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  color: PropTypes.string,\n  mAll: PropTypes.number,\n  mT: PropTypes.number,\n  mR: PropTypes.number,\n  mB: PropTypes.number,\n  mL: PropTypes.number,\n  mBpx: PropTypes.number,\n  mTpx: PropTypes.number,\n  mLpx: PropTypes.number,\n  mRpx: PropTypes.number,\n  mAllpx: PropTypes.number,\n  onPress: PropTypes.func.isRequired,\n  textStyle: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  title: PropTypes.string,\n  padX: PropTypes.number,\n  padY: PropTypes.number,\n  padAll: PropTypes.number,\n  labelSize: PropTypes.number,\n  borderWidth: PropTypes.number,\n  borderColor: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  image: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  resizeMode: PropTypes.string,\n  imageStyle: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object,\n    PropTypes.number,\n  ]),\n  header: PropTypes.bool,\n  commonTextProps: PropTypes.object,\n};\n\nButton.defaultProps = {\n  activeOpacity: 0.7,\n  alignSelf: \"auto\",\n  backgroundColor: \"blue\",\n  buttonStyle: emptyObj,\n  color: \"white\",\n  mAll: 0,\n  mT: 0,\n  mR: 0,\n  mB: 0,\n  mL: 0,\n  mBpx: 0,\n  mTpx: 0,\n  mLpx: 0,\n  mRpx: 0,\n  mAllpx: 0,\n  padAll: 0,\n  padX: 0,\n  padY: 0,\n  textStyle: emptyObj,\n  title: \"\",\n  labelSize: 3,\n  disabled: false,\n  borderWidth: 0,\n  borderColor: false,\n  image: false,\n  resizeMode: \"contain\",\n  imageStyle: emptyObj,\n  header: false,\n  commonTextProps: emptyObj,\n};\n\nexport { Button };\n"]}