{"version":3,"sources":["../../../lib/commonComponents/FillCircle.js"],"names":["FillCircle","size","props","isFilled","emptyColor","filledColor","borderWidth","converted","localStyles","containerCircle","alignItems","justifyContent","width","height","borderRadius","borderColor","filledCircle","backgroundColor","emptyCircle","style","propTypes","PropTypes","number","bool","string","oneOfType","array","object","defaultProps","defaultRefs","emptyObj"],"mappings":"4IAAA,4B,2CACA,qC,mDACA,yCACA,+C,mFAEA,GAAMA,YAAa,QAAbA,WAAa,OAAS,IAClBC,KADkB,CACuCC,KADvC,CAClBD,IADkB,CACZE,QADY,CACuCD,KADvC,CACZC,QADY,CACFC,UADE,CACuCF,KADvC,CACFE,UADE,CACUC,WADV,CACuCH,KADvC,CACUG,WADV,CACuBC,WADvB,CACuCJ,KADvC,CACuBI,WADvB,CAE1B,GAAMC,WAAY,CAChBF,YAAa,sCAAmBA,WAAnB,CADG,CAEhBD,WAAY,sCAAmBA,UAAnB,CAFI,CAAlB,CAKA,GAAMI,aAAc,CAClBC,gBAAiB,CACfC,WAAY,QADG,CAEfC,eAAgB,QAFD,CAGfC,MAAOX,IAHQ,CAIfY,OAAQZ,IAJO,CAKfa,aAAcb,KAAO,CALN,CAMfK,uBANe,CAOfS,YAAaR,UAAUF,WAPR,CADC,CAUlBW,aAAc,CACZC,gBAAiBV,UAAUF,WADf,CAEZO,MAAOX,KAAO,IAFF,CAGZY,OAAQZ,KAAO,IAHH,CAIZa,aAAeb,KAAO,IAAR,CAAgB,CAJlB,CAVI,CAgBlBiB,YAAa,CACXD,gBAAiBV,UAAUH,UADhB,CAEXQ,MAAOX,KAAO,IAFH,CAGXY,OAAQZ,KAAO,IAHJ,CAIXa,aAAeb,KAAO,IAAR,CAAgB,CAJnB,CAhBK,CAApB,CAwBA,MACE,+BAAC,iBAAD,EAAM,MAAO,CAACO,YAAYC,eAAb,CAA8BP,MAAMiB,KAApC,CAAb,iDACE,8BAAC,iBAAD,EACE,MAAOhB,SAAWK,YAAYQ,YAAvB,CAAsCR,YAAYU,WAD3D,iDADF,CADF,CAOD,CAtCD,CAwCAlB,WAAWoB,SAAX,CAAuB,CACrBnB,KAAMoB,oBAAUC,MADK,CAErBnB,SAAUkB,oBAAUE,IAFC,CAGrBnB,WAAYiB,oBAAUG,MAHD,CAIrBnB,YAAagB,oBAAUG,MAJF,CAKrBlB,YAAae,oBAAUC,MALF,CAMrBH,MAAOE,oBAAUI,SAAV,CAAoB,CACzBJ,oBAAUK,KADe,CAEzBL,oBAAUM,MAFe,CAGzBN,oBAAUC,MAHe,CAApB,CANc,CAAvB,CAaAtB,WAAW4B,YAAX,CAA0B,CACxB3B,KAAM,EADkB,CAExBE,SAAU,KAFc,CAGxBC,WAAY,OAHY,CAIxBC,YAAa,MAJW,CAKxBC,YAAa,CALW,CAMxBa,MAAOU,2BAAYC,QANK,CAA1B,C,QASS9B,U,CAAAA,U","file":"FillCircle.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native\";\nimport { defaultRefs, getColorFromString } from \"../commonHelpers\";\n\nconst FillCircle = props => {\n  const { size, isFilled, emptyColor, filledColor, borderWidth } = props;\n  const converted = {\n    filledColor: getColorFromString(filledColor),\n    emptyColor: getColorFromString(emptyColor),\n  };\n\n  const localStyles = {\n    containerCircle: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      borderWidth,\n      borderColor: converted.filledColor,\n    },\n    filledCircle: {\n      backgroundColor: converted.filledColor,\n      width: size * 0.75,\n      height: size * 0.75,\n      borderRadius: (size * 0.75) / 2,\n    },\n    emptyCircle: {\n      backgroundColor: converted.emptyColor,\n      width: size * 0.75,\n      height: size * 0.75,\n      borderRadius: (size * 0.75) / 2,\n    },\n  };\n\n  return (\n    <View style={[localStyles.containerCircle, props.style]}>\n      <View\n        style={isFilled ? localStyles.filledCircle : localStyles.emptyCircle}\n      />\n    </View>\n  );\n};\n\nFillCircle.propTypes = {\n  size: PropTypes.number,\n  isFilled: PropTypes.bool,\n  emptyColor: PropTypes.string,\n  filledColor: PropTypes.string,\n  borderWidth: PropTypes.number,\n  style: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object,\n    PropTypes.number,\n  ]),\n};\n\nFillCircle.defaultProps = {\n  size: 20,\n  isFilled: false,\n  emptyColor: \"white\",\n  filledColor: \"blue\",\n  borderWidth: 1,\n  style: defaultRefs.emptyObj,\n};\n\nexport { FillCircle };\n"]}